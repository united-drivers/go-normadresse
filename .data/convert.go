package main

import (
	"bufio"
	"encoding/csv"
	"fmt"
	"io"
	"log"
	"os"
	"strconv"
)

type entry struct {
	step  float64
	short string
	long  string
}

func main() {
	f, _ := os.Open("normadresse.csv")
	reader := csv.NewReader(bufio.NewReader(f))
	entries := []entry{}
	for i := 0; ; i++ {
		line, err := reader.Read()
		if err == io.EOF {
			break
		}
		if err != nil {
			log.Fatal(err)
		}
		if i == 0 { // skip first line
			continue
		}
		// there is an "option" row in the csv header
		// but there is no entry with a value at the time
		// I'm writing this script.
		if line[3] != "" {
			log.Fatal(fmt.Errorf("not implemented"))
		}
		step, err := strconv.ParseFloat(line[0], 64)
		if err != nil {
			log.Fatal(err)
		}
		entries = append(entries, entry{
			step:  step,
			long:  line[1],
			short: line[2],
		})
	}
	fmt.Println("// autogenerated file, please do not edit")
	fmt.Println("package normadresse")
	fmt.Println("var rules = []rule{")
	for _, entry := range entries {
		fmt.Printf("{%f, %q, %q},\n", entry.step, entry.short, entry.long)
	}
	fmt.Println("}")
}
